name: ci

on: push

jobs:
  # Job to run change detection: enable conditional execution of workflow steps and jobs, based on the files modified by pull request, on a feature branch, or by the recently pushed commits
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      # For pull requests, it's not necessary to checkout the code
      - name: Check out code
        uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'

  test-frontend:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      # Retrieve code from the repository (mandatory prior to using the custom local action)
      - name: Check out code
        uses: actions/checkout@v4
      # Re-use custom action to install pnpm and checkout code
      - uses: ./.github/actions/test-common-steps
        with:
          directory: "frontend"
          script: "test"

  test-backend:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      # Retrieve code from the repository (mandatory prior to using the custom local action)
      - name: Check out code
        uses: actions/checkout@v4
      # Re-use custom action to install pnpm and checkout code
      - uses: ./.github/actions/test-common-steps
        with:
          directory: "backend"
          script: "test:db"

  build-frontend:
    needs: test-frontend
    # Run job only if:
    # - the frontend code has changed
    # - the `test-frontend` job has been completed successfully
    # - the commit is on the main branch
    # - the commit is tagged starting with v
    if: ${{ github.ref == 'refs/heads/main' }} && startsWith(${{ github.ref }}, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      # Enable multi-platform builds within Docker workflows by installing QEMU static binaries
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      # Create and boot a builder to be used in the following steps
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      # Log in to Docker Hub using personal access token
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Build and push the properly tagged Docker image to Docker Hub using Buildx. By default, this actions use the Git context so there is no need to use the `actions/checkout` action to check out the repository as this will ne done directly by BuildKit.
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          context: "{{defaultContext}}:frontend"
          tags: ${{ vars.DOCKERHUB_USERNAME }}/frontend:${{ github.ref_name }}

  build-backend:
    needs: test-backend
    # Run job only if:
    # - the backend code has changed
    # - the commit is on the main branch
    # - the commit is tagged starting with v
    if: ${{ github.ref == 'refs/heads/main' }} && startsWith(${{ github.ref }}, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      # Enable multi-platform builds within Docker workflows by installing QEMU static binaries
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      # Create and boot a builder to be used in the following steps
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      # Log in to Docker Hub using personal access token
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Build and push the properly tagged Docker image to Docker Hub using Buildx. By default, this actions use the Git context so there is no need to use the `actions/checkout` action to check out the repository as this will ne done directly by BuildKit.
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          context: "{{defaultContext}}:backend"
          tags: ${{ vars.DOCKERHUB_USERNAME }}/backend:${{ github.ref_name }}
